<UserControl x:Class="ArcGISControls.Tools.PlaceListControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase" 
             xmlns:Language="clr-namespace:ArcGISControls.Tools.Language" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Style x:Key="sListBox_Map" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Style="{DynamicResource sScrollViewer1}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="sListBoxItem_Map" TargetType="{x:Type ListBoxItem}">
        	<Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid Width="Auto" MouseLeftButtonDown="Grid_OnMouseLeftButtonDown" MouseLeftButtonUp="Grid_OnMouseLeftButtonUp">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" HorizontalAlignment="Stretch"/>
                            <Rectangle Fill="#FFDBDBDB" Height="1" Margin="0" StrokeStartLineCap="Square" StrokeEndLineCap="Square" Stroke="{x:Null}" StrokeThickness="1.5" VerticalAlignment="Bottom"/>
                            <ContentControl VerticalAlignment="Center" Margin="36,0,0,0" 
								SnapsToDevicePixels="True" TextOptions.TextFormattingMode="Display" FontSize="12" FontFamily="Malgun Gothic" HorizontalAlignment="Left" MaxWidth="145">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </ContentControl>
                            <Button Margin="0,0,9,0" Width="16" Height="16" HorizontalAlignment="Right" Style="{DynamicResource sButton_Delete_Map}"
                                    Click="ButtonxDeleteObjectOnClick"
                                    Visibility="{Binding  ElementName=xRoot, Path=DataContext.IsEditMode, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ResourceKey=BoolToVisConverter}}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="34"/>
			            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ListMouseOver}"/>
                </Trigger>
                <Trigger Property="Selector.IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ListPress}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Selector.IsSelected" Value="True"/>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource ListPress}"/>
                    <Setter Property="Foreground" Value="White"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="sButton_Delete_Map" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Ellipse x:Name="ellipse" Fill="#FF7A7A7A" StrokeThickness="0" Width="16" Height="16"/>
                            <Path Fill="{x:Null}" Stretch="Fill" StrokeEndLineCap="Square" StrokeStartLineCap="Square" StrokeThickness="1.5" Data="M0.75,0.75 L7.25,7.25 M7.25,0.75 L0.75,7.25" x:Name="path" Width="8" Height="8" VerticalAlignment="Center" SnapsToDevicePixels="True" Stroke="White" Margin="0" HorizontalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="ellipse" Value="#FFB8B8B8"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="ellipse" Value="#FF545454"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Opacity" TargetName="path" Value="0.2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <Grid Background="White">
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
            <CollectionViewSource Source="{Binding PlaceListItems, UpdateSourceTrigger=PropertyChanged}" x:Key="cvsLocations">
                <CollectionViewSource.SortDescriptions>
					<scm:SortDescription PropertyName="ObjectData.ObjectTypeOrder" />
					<scm:SortDescription PropertyName="ObjectData.IsHome" Direction="Descending" />
                    <scm:SortDescription PropertyName="ObjectData.Name" Direction="Ascending" />                </CollectionViewSource.SortDescriptions>
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="ObjectData.ObjectTypeOrder"/>
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ListBox x:Name="xListBoxLocations" Grid.Row="1" SelectionMode="Extended"
                 ItemsSource="{Binding Source={StaticResource cvsLocations}, UpdateSourceTrigger=PropertyChanged}" 
                 Style="{DynamicResource sListBox_Map}" ItemContainerStyle="{StaticResource  sListBoxItem_Map}" 
                 SelectedItem ="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                 BorderThickness="0" BorderBrush="{x:Null}" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"
                 >
            <ListBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <Grid Background="WhiteSmoke" x:Name="gridTemplate" Height="31" VerticalAlignment="Center">
                                                <Grid.Resources>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="FontSize" Value="14" />
                                                        <Setter Property="Foreground" Value="White" />
                                                        <Setter Property="VerticalAlignment" Value="Center" />
                                                    </Style>
                                                </Grid.Resources>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="36" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>

                                                <ToggleButton x:Name="btnShowHide" IsChecked="True" Style="{DynamicResource sToggleButton_MapFolder}"/>

                                                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                    <TextBlock Grid.Column="1" Text="{Binding Path=Items[0].ObjectData.ObjectTypeString}" Margin="0,0,3,0" HorizontalAlignment="Right" Style="{DynamicResource sTextBlock_Basic}" Foreground="Black"/>
                                                    <TextBlock Grid.Column="2" Text="("  Style="{DynamicResource sTextBlock_Basic}" Margin="0,0,5,0" Foreground="Black"/>
                                                    <TextBlock Grid.Column="3" Text="{Binding ItemCount}" TextAlignment="Center" Style="{DynamicResource sTextBlock_Basic}" Foreground="Black"/>
													<TextBlock Grid.Column="4" Text=")" Style="{DynamicResource sTextBlock_Basic}" Margin="3,0,0,0" Foreground="Black"/>
                                                </StackPanel>
                                                <Rectangle Fill="White" Height="1" Margin="0" VerticalAlignment="Top" Grid.ColumnSpan="2"/>
                                                <Rectangle Fill="#FFDBDBDB" Height="1" Margin="0" VerticalAlignment="Bottom" Grid.ColumnSpan="2"/>
                                            </Grid>

                                            <ItemsPresenter Visibility="{Binding ElementName=btnShowHide, Path=IsChecked, Converter={StaticResource  booleanToVisibilityConverter}}" Grid.Row="1"/>

                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListBox.GroupStyle>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <DockPanel>
                        <TextBlock Text="{Binding Path=ObjectData.Name}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" ToolTip="{Binding Path=ObjectData.Name}"/>
                    </DockPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

    </Grid>
</UserControl>
