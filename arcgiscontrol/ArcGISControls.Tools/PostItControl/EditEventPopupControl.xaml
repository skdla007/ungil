<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:postItControl="clr-namespace:ArcGISControls.Tools.PostItControl"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="ArcGISControls.Tools.PostItControl.EditEventPopupControl"
             mc:Ignorable="d" 
             Width="300" Height="280">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../StyleResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

        <ObjectDataProvider x:Key="EventStatuses" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="postItControl:EventStatus"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="EventUrgencies" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="postItControl:EventSeverity"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        	<Style x:Key="sButton_EditEventClose" TargetType="{x:Type Button}">
        		<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" SnapsToDevicePixels="True" Background="#00000000" CornerRadius="3" BorderBrush="#00FFAF00" BorderThickness="1" Width="16" Height="16">
							<Path x:Name="path" Data="M5,4C5,4 4,5 4,5 4,5 7,8 7,8 7,8 4,11 4,11 4,11 5,12 5,12 5,12 8,9 8,9 8,9 11,12 11,12 11,12 12,11 12,11 12,11 9,8 9,8 9,8 12,5 12,5 12,5 11,4 11,4 11,4 8,7 8,7 8,7 5,4 5,4z" HorizontalAlignment="Center" Height="8" Margin="0" Opacity="1" Stretch="Fill" VerticalAlignment="Center" Width="8" Fill="#FFA8A8A8"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="BorderBrush" TargetName="border" Value="#FFFFAF00"/>
								<Setter Property="Fill" TargetName="path" Value="{DynamicResource bBackground_#FFFFCC00_Point}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Fill" TargetName="path" Value="#FF666666"/>
								<Setter Property="BorderBrush" TargetName="border" Value="#FF333333"/>
								<Setter Property="Background" TargetName="border" Value="#FF222222"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" TargetName="path" Value="0.2"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		   <Style x:Key="sButtonController" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="grid">
                                <Border x:Name="border" BorderThickness="1" CornerRadius="3" Background="#FF333333" BorderBrush="#FF3D3D3D" SnapsToDevicePixels="True"/>
                                <TextBlock x:Name="v" Margin="0" TextWrapping="Wrap" Text="{TemplateBinding Content}" d:LayoutOverrides="Width, Height" Foreground="#FFCCCCCC" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="10.667" RenderTransformOrigin="0.5,0.5">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="360"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="#FF222222"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF333333"/>
                                    <Setter Property="Opacity" TargetName="v" Value="0.2"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#FF333333"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource bBackground_#FFFFCC00_Point}"/>
                                    <Setter Property="Foreground" TargetName="v" Value="{DynamicResource bBackground_#FFFFCC00_Point}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" TargetName="v" Value="#FF666666"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF333333"/>
                                    <Setter Property="Background" TargetName="border" Value="#FF222222"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
			<!-- ComboBox -->
			<Style x:Key="sComboBoxCommon" TargetType="{x:Type ComboBox}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Padding" Value="4,3"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                    <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                        <Border x:Name="DropDownBorder" BorderBrush="#FF262626" BorderThickness="1" Background="#FF212121">
                                            <ScrollViewer x:Name="DropDownScrollViewer" Foreground="White" Template="{DynamicResource sScrollViewer_Common}" MaxHeight="150">
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                </Popup>
                                <ToggleButton BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}"/>
                                <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="9,0,2,2" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                    <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                    <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="Background" Value="#FFF4F4F4"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>
                                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEditable" Value="true">
                        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                        <Setter Property="IsTabStop" Value="false"/>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
				<Style x:Key="sComboBoxItem_EditEvent" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="3,0,3,0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Grid Margin="2" Height="25">
                                <Border x:Name="Bd" SnapsToDevicePixels="true" Background="#FF222222" HorizontalAlignment="Stretch" BorderThickness="0.5" BorderBrush="#FF353535"/>
                                <ContentControl x:Name="Text" TabIndex="10">
                                	<ContentPresenter VerticalAlignment="Center" Margin="5,0"/>	                        
								</ContentControl>
                                <!--<TextBlock x:Name="textBlock" HorizontalAlignment="Stretch" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" d:LayoutOverrides="Height" VerticalAlignment="Center" Foreground="#FF999999"/>-->
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FFFFAF00"/>
                                    <Setter Property="Foreground" TargetName="Text" Value="White"/>
                                    <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                                </Trigger>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter Property="Background" TargetName="Bd" Value="#FF222222"/>
                                    <Setter Property="Foreground" TargetName="Text" Value="#FFFFAF00"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
			<!-- Scroller Style -->
			<Style x:Key="sScrollBarButton_Commom" TargetType="{x:Type RepeatButton}">
						<Setter Property="OverridesDefaultStyle" Value="true"/>
						<Setter Property="Focusable" Value="false"/>
						<Setter Property="IsTabStop" Value="false"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type RepeatButton}">
									<Path Fill="#FF656565" Stretch="Fill" Stroke="{x:Null}" Width="6.026" Height="6.026" RenderTransformOrigin="0.5,0.5" Data="M0.5,0.5 L5.5263113,-0.52631126 4.5,4.5 z" Margin="0,4,0.5,0">
										<Path.RenderTransform>
											<TransformGroup>
												<ScaleTransform ScaleX="1" ScaleY="1"/>
												<SkewTransform AngleX="0" AngleY="0"/>
												<RotateTransform Angle="-45"/>
												<TranslateTransform X="0.21249155749739757" Y="-0.5129999999999999"/>
											</TransformGroup>
										</Path.RenderTransform>
									</Path>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
            </Style>
			<Style x:Key="sScrollBarThumb_Common" TargetType="{x:Type Thumb}">
				<Setter Property="OverridesDefaultStyle" Value="true"/>
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Thumb}">
							<Rectangle Fill="#FF656565" Stroke="{x:Null}" Width="7" Height="Auto" RadiusX="3" RadiusY="3"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
            </Style>
			<Style x:Key="sVerticalScrollBarPageButton_Common" TargetType="{x:Type RepeatButton}">
				<Setter Property="OverridesDefaultStyle" Value="true"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="Focusable" Value="false"/>
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type RepeatButton}">
							<Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
            </Style>
			<Style x:Key="sHorizontalScrollBarPageButton_Common" TargetType="{x:Type RepeatButton}">
				<Setter Property="OverridesDefaultStyle" Value="true"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="Focusable" Value="false"/>
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type RepeatButton}">
							<Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
            </Style>
		<Style x:Key="sScrollBarStyle_White" TargetType="{x:Type ScrollBar}">
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid x:Name="Bg" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
								<RowDefinition Height="0.00001*"/>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
							</Grid.RowDefinitions>
							<RepeatButton Style="{StaticResource sScrollBarButton_Commom}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineUpCommand}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"/>
							<Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" IsDirectionReversed="true">
								<Track.Thumb>
									<Thumb Style="{StaticResource sScrollBarThumb_Common}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
								</Track.Thumb>
								<Track.IncreaseRepeatButton>
									<RepeatButton Style="{StaticResource sVerticalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageDownCommand}"/>
								</Track.IncreaseRepeatButton>
								<Track.DecreaseRepeatButton>
									<RepeatButton Style="{StaticResource sVerticalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageUpCommand}"/>
								</Track.DecreaseRepeatButton>
							</Track>
							<RepeatButton Style="{StaticResource sScrollBarButton_Commom}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineDownCommand}" Grid.Row="2" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow" RenderTransformOrigin="0.5,0.5">
								<RepeatButton.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="180"/>
										<TranslateTransform/>
									</TransformGroup>
								</RepeatButton.RenderTransform>
							</RepeatButton>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Bg" Value="#FFF4F4F4"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
                <Style.Triggers>
                	<Trigger Property="Orientation" Value="Horizontal">
                		<Setter Property="Width" Value="Auto"/>
                		<Setter Property="MinWidth" Value="0"/>
                		<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                		<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                		<Setter Property="Template">
                			<Setter.Value>
                				<ControlTemplate TargetType="{x:Type ScrollBar}">
                					<Grid x:Name="Bg" Height="Auto" SnapsToDevicePixels="true" Background="#FF252525" Margin="0,0,0,0">
                						<Grid.ColumnDefinitions>
                							<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" Width="Auto" MinWidth="12.694"/>
                							<ColumnDefinition Width="*"/>
                							<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" Width="Auto" MinWidth="13.433"/>
                						</Grid.ColumnDefinitions>
                						<RepeatButton Style="{DynamicResource sRepeatButton_Left}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineLeftCommand}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
                						<Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="1">
                							<Track.DecreaseRepeatButton>
                								<RepeatButton Style="{StaticResource sHorizontalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageLeftCommand}"/>
                							</Track.DecreaseRepeatButton>
                							<Track.IncreaseRepeatButton>
                								<RepeatButton Style="{StaticResource sHorizontalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageRightCommand}"/>
                							</Track.IncreaseRepeatButton>
                							<Track.Thumb>
                								<Thumb Style="{DynamicResource sThumb_Common}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                							</Track.Thumb>
                						</Track>
                						<RepeatButton Style="{DynamicResource sRepeatButton_Right}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineRightCommand}" Grid.Column="2" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
                					</Grid>
                				</ControlTemplate>
                			</Setter.Value>
                		</Setter>
                	</Trigger>
                </Style.Triggers>
            </Style>
			<Style x:Key="RepeatButtonStyle1" TargetType="{x:Type RepeatButton}">
				<Setter Property="OverridesDefaultStyle" Value="true"/>
				<Setter Property="Focusable" Value="false"/>
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type RepeatButton}">
							<Path Fill="#FF656565" Stretch="Fill" Stroke="{x:Null}" Margin="0,-1,0.5,0" Width="6.026" Height="6.026" RenderTransformOrigin="0.5,0.5" Data="M0.5,0.5 L5.5263113,-0.52631126 4.5,4.5 z">
								<Path.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="1" ScaleY="1"/>
										<SkewTransform AngleX="0" AngleY="0"/>
										<RotateTransform Angle="135"/>
										<TranslateTransform X="0.21249155749739757" Y="-0.5129999999999999"/>
									</TransformGroup>
								</Path.RenderTransform>
							</Path>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
            </Style>
		<Style x:Key="sScrollBarStyle_Black" TargetType="{x:Type ScrollBar}">
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}" >
						<Grid x:Name="Bg" SnapsToDevicePixels="true" Width="Auto" Opacity="1" Background="#FF252525" Margin="0,0,0,0" IsEnabled="True" HorizontalAlignment="Stretch">
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="Auto" MinHeight="11.341"/>
								<RowDefinition Height="*"/>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="Auto" MinHeight="11.5"/>
							</Grid.RowDefinitions>
							<RepeatButton Style="{StaticResource sScrollBarButton_Commom}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineUpCommand}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"/>
							<Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" IsDirectionReversed="true">
								<Track.DecreaseRepeatButton>
									<RepeatButton Style="{StaticResource sVerticalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageUpCommand}"/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Style="{StaticResource sVerticalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageDownCommand}"/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb Style="{StaticResource sScrollBarThumb_Common}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
								</Track.Thumb>
							</Track>
							<RepeatButton Style="{DynamicResource RepeatButtonStyle1}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineDownCommand}" Grid.Row="2" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
                <Style.Triggers>
                	<Trigger Property="Orientation" Value="Horizontal">
                		<Setter Property="Width" Value="Auto"/>
                		<Setter Property="MinWidth" Value="0"/>
                		<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                		<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                		<Setter Property="Template">
                			<Setter.Value>
                				<ControlTemplate TargetType="{x:Type ScrollBar}">
                					<Grid x:Name="Bg" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                						<Grid.ColumnDefinitions>
                							<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                							<ColumnDefinition Width="0.00001*"/>
                							<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                						</Grid.ColumnDefinitions>
                						<RepeatButton Style="{StaticResource sScrollBarButton_Commom}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineLeftCommand}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
                						<Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="1">
                							<Track.DecreaseRepeatButton>
                								<RepeatButton Style="{StaticResource sHorizontalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageLeftCommand}"/>
                							</Track.DecreaseRepeatButton>
                							<Track.IncreaseRepeatButton>
                								<RepeatButton Style="{StaticResource sHorizontalScrollBarPageButton_Common}" Command="{x:Static ScrollBar.PageRightCommand}"/>
                							</Track.IncreaseRepeatButton>
                							<Track.Thumb>
                								<Thumb Style="{StaticResource sScrollBarThumb_Common}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                							</Track.Thumb>
                						</Track>
                						<RepeatButton Style="{StaticResource sScrollBarButton_Commom}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineRightCommand}" Grid.Column="2" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
                					</Grid>
                					<ControlTemplate.Triggers>
                						<Trigger Property="IsEnabled" Value="false">
                							<Setter Property="Background" TargetName="Bg" Value="#FFF4F4F4"/>
                						</Trigger>
                					</ControlTemplate.Triggers>
                				</ControlTemplate>
                			</Setter.Value>
                		</Setter>
                	</Trigger>
                </Style.Triggers>
            </Style>
		<ControlTemplate x:Key="sScrollViewer_Map" TargetType="{x:Type ScrollViewer}">
			<Grid x:Name="Grid" Background="{TemplateBinding Background}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1" Opacity="0.01"/>
				<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" 
					CanHorizontallyScroll="True" CanVerticallyScroll="True" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" 
					Margin="{TemplateBinding Padding}" Grid.Row="0"/>
				<ScrollBar x:Name="PART_VerticalScrollBar" ContextMenu="{x:Null}" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" 
					Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
					ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource sScrollBarStyle_Black}"/>
				<ScrollBar x:Name="PART_HorizontalScrollBar" ContextMenu="{x:Null}" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" 
					Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
					ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource sScrollBarStyle_White}"/>
			</Grid>
		</ControlTemplate>
			  <Style x:Key="sTextBox_Common" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="#000000FF"/>
                <Setter Property="BorderBrush" Value="#FF000000"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
				<Setter Property="SnapsToDevicePixels" Value="True"/>
				<Setter Property="FontFamily" Value="Malgun Gothic"/>
				<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
				<Setter Property="FontSize" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border SnapsToDevicePixels="true" x:Name="Bd" CornerRadius="3" BorderThickness="1" Background="#FF333333" BorderBrush="#FF3D3D3D" >
                                <Grid Background="{x:Null}">
                                    <ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" CanContentScroll="False" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Margin="0" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalAlignment="Stretch" Template="{DynamicResource sScrollViewer_Map}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="Opacity" TargetName="Bd" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="IsHitTestVisible" Value="True"/>
            </Style>
            <postItControl:BoolToVisibleDebuggingConverter x:Key="BoolToVisibleDebuggingConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.Visibility>
        <!--<Binding Path="IsEditEventPopupVisible" Converter="{StaticResource BooleanToVisibilityConverter}" />-->
        <Binding Path="IsEditEventPopupVisible" Converter="{StaticResource BoolToVisibleDebuggingConverter}" UpdateSourceTrigger="PropertyChanged" />
    </UserControl.Visibility>
    <Grid>
    	<Grid Grid.Row="1">
    		<Grid.RowDefinitions>
    			<RowDefinition Height="20"/>
    			<RowDefinition Height="*" />
    			<RowDefinition Height="40" />
    		</Grid.RowDefinitions>
    		<Border BorderBrush="#FF333333" BorderThickness="1" Margin="0" Background="#FF111111" Grid.RowSpan="3"/>
    		<Border BorderBrush="#FF444444" BorderThickness="1" Margin="5,5,5,0" Grid.Row="1" Background="#FF262626"/>
    		<Grid x:Name="xTaskBarPanel" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" >
    			<Border x:Name="xRectangleTitle" BorderThickness="0" Margin="0">
    				<Border.Background>
    					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    						<GradientStop Color="#FF515151" Offset="0"/>
    						<GradientStop Color="#FF1A1A1A" Offset="1"/>
    					</LinearGradientBrush>
    				</Border.Background>
    			</Border>
    			<TextBlock Text="Edit Event" HorizontalAlignment="Left" Foreground="#FFA8A8A8" Margin="7,0,0,1" VerticalAlignment="Center"/>
    			<Button x:Name="xCloseButton" HorizontalAlignment="Right" Content="X" Margin="0,0,4,0" FontSize="7" Command="{Binding CloseCommand}" Style="{DynamicResource sButton_EditEventClose}" />
    		</Grid>
    		<Grid x:Name="xTitlePanel" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="16,6,12,2">
    			<StackPanel Margin="0" VerticalAlignment="Center">
    				<StackPanel Orientation="Horizontal" Margin="0,0,0,5">
    					<TextBlock Text="Status :" TextAlignment="Right" Width="62" Foreground="#FF999999" VerticalAlignment="Center"/>
    					<ComboBox x:Name="xStatusComboBox" 
    						ItemsSource="{Binding Source={StaticResource EventStatuses}}"
    						SelectedItem="{Binding SelectedStatus}" Style="{DynamicResource sComboBoxCommon}" Margin="5,0,0,0" Height="25" Width="200" Foreground="White" ItemContainerStyle="{DynamicResource sComboBoxItem_EditEvent}"/>
    				</StackPanel>

    				<StackPanel Orientation="Horizontal" Margin="0,0,0,5">
    					<TextBlock Text="Urgency :" Width="62" TextAlignment="Right" Foreground="#FF999999" VerticalAlignment="Center"/>
    					<ComboBox x:Name="xUrgencyComboBox"
    						ItemsSource="{Binding Source={StaticResource EventUrgencies}}"
    						SelectedItem="{Binding SelectedUrgency}" Style="{DynamicResource sComboBoxCommon}" Height="25" Margin="5,0,0,0" Width="200" Foreground="White" ItemContainerStyle="{DynamicResource sComboBoxItem_EditEvent}"/>
    				</StackPanel>

    				<StackPanel Orientation="Horizontal" Margin="0,0,0,5">
    					<TextBlock Text="Owner :" Width="62" TextAlignment="Right" Foreground="#FF999999" VerticalAlignment="Center"/>
    					<ComboBox x:Name="xOwnerComboBox"
    						ItemsSource="{Binding Owners}"
    						SelectedItem="{Binding SelectedOwner}" Style="{DynamicResource sComboBoxCommon}" Height="25" Margin="5,0,0,0" Width="200" Foreground="White" ItemContainerStyle="{DynamicResource sComboBoxItem_EditEvent}"/>
    				</StackPanel>

    				<StackPanel Orientation="Horizontal">
    					<TextBlock Text="Comment :" Width="62" TextAlignment="Right" Foreground="#FF999999" VerticalAlignment="Center"/>
    					<TextBox x:Name="xCommentTextBox" Text="{Binding Comment}" Style="{DynamicResource sTextBox_Common}" AcceptsReturn="True" AcceptsTab="True" Height="100" Margin="5,0,0,0" Width="200" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" TextWrapping="Wrap"/>
    				</StackPanel>
    			</StackPanel>
                
    		</Grid>
    		<Grid x:Name="xBodyPanel" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Visibility="Collapsed">
    			<TextBlock Text="Post it title" />
    		</Grid>
    		<Grid x:Name="xFooterPanel" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
    			<StackPanel Margin="0" Orientation="Horizontal" d:LayoutOverrides="Height" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Button x:Name="xUpdateButton" Content="Update" Command="{Binding UpdateCommand}" Style="{DynamicResource sButtonController}"  Height="30" Width="100"  />
    				<Button x:Name="xCancelButton" Content="Cancel" Command="{Binding CloseCommand}" Style="{DynamicResource sButtonController}" Height="30" Width="100" Margin="3,0,0,0" />
    			</StackPanel>
    		</Grid>
    	</Grid>
    </Grid>
</UserControl>
