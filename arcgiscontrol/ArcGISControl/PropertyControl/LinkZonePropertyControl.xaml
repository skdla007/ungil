<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:Language="clr-namespace:ArcGISControl.Language"
             xmlns:properties="clr-namespace:ArcGISControl.PropertyControl"
             x:Class="ArcGISControl.PropertyControl.LinkZonePropertyControl" 
             mc:Ignorable="d" MaxHeight="780" Width="440">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
        <properties:MilliToCentConverter x:Key="MilliToCentConverter" />
        <Style x:Key="sColorPicker" TargetType="{x:Type xctk:ColorPicker}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ButtonStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid SnapsToDevicePixels="True">
                                        <Grid Visibility="Collapsed">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <xctk:ButtonChrome x:Name="ToggleButtonChrome" Grid.Column="1" CornerRadius="0,2.75,2.75,0" InnerCornerRadius="0,1.75,1.75,0" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}">
                                                <xctk:ButtonChrome.Visibility>
                                                    <Binding Path="ShowDropDownButton" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                        <Binding.Converter>
                                                            <BooleanToVisibilityConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </xctk:ButtonChrome.Visibility>
                                                <Grid x:Name="arrowGlyph" Grid.Column="1" IsHitTestVisible="False" Margin="5">
                                                    <Path x:Name="Arrow" Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" Fill="Black" Height="4" Width="7"/>
                                                </Grid>
                                            </xctk:ButtonChrome>
                                        </Grid>
                                        <Border x:Name="Bd" BorderBrush="#FFCCCCCC" BorderThickness="1" HorizontalAlignment="Stretch" Grid.ColumnSpan="1" CornerRadius="5" Margin="0">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFE7E7E7"/>
                                                    <GradientStop Color="White" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <!--<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Height="Auto" Width="Auto" Margin="4,0" VerticalAlignment="Center"/>-->
                                        </Border>
                                        <Border x:Name="border" BorderThickness="1" Margin="1,1,1,-14" CornerRadius="4">
                                            <Border.BorderBrush>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="White" Offset="0"/>
                                                    <GradientStop Offset="0.5"/>
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Fill" TargetName="Arrow" Value="#FFAFAFAF"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:ColorPicker}">
                        <Grid>
                            <ToggleButton x:Name="PART_ColorPickerToggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="True" IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="22" Padding="{TemplateBinding Padding}" Style="{TemplateBinding ButtonStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ToggleButton.IsHitTestVisible>
                                    <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <xctk:InverseBoolConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </ToggleButton.IsHitTestVisible>
                                <Grid Margin="2">
                                    <Border x:Name="ColorAndName" Background="White" Visibility="Hidden">
                                        <StackPanel Orientation="Horizontal">
                                            <Border BorderBrush="#FFC9CACA" BorderThickness="1" HorizontalAlignment="Left" Margin="2,1,4,1" Width="20">
                                                <Border.Style>
                                                    <Style TargetType="{x:Type Border}">
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <Binding Path="SelectedColor" RelativeSource="{RelativeSource TemplatedParent}">
                                                                    <Binding.Converter>
                                                                        <xctk:ColorToSolidColorBrushConverter/>
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" Value="Transparent">
                                                                <Setter Property="Background">
                                                                    <Setter.Value>
                                                                        <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                            <DrawingBrush.Drawing>
                                                                                <DrawingGroup>
                                                                                    <GeometryDrawing Brush="White">
                                                                                        <GeometryDrawing.Geometry>
                                                                                            <RectangleGeometry Rect="0,0,100,100"/>
                                                                                        </GeometryDrawing.Geometry>
                                                                                    </GeometryDrawing>
                                                                                    <GeometryDrawing Brush="LightGray">
                                                                                        <GeometryDrawing.Geometry>
                                                                                            <GeometryGroup>
                                                                                                <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                <RectangleGeometry Rect="50,50,50,50"/>
                                                                                            </GeometryGroup>
                                                                                        </GeometryDrawing.Geometry>
                                                                                    </GeometryDrawing>
                                                                                </DrawingGroup>
                                                                            </DrawingBrush.Drawing>
                                                                        </DrawingBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                            </Border>
                                            <TextBlock Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Border>
                                </Grid>
                            </ToggleButton>
                            <Border x:Name="ColorOnly" Margin="3" CornerRadius="3" IsHitTestVisible="False" BorderBrush="#FFCCCCCC" BorderThickness="1">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <Binding Path="SelectedColor" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <xctk:ColorToSolidColorBrushConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" Value="Transparent">
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                            <DrawingBrush.Drawing>
                                                                <DrawingGroup>
                                                                    <GeometryDrawing Brush="White">
                                                                        <GeometryDrawing.Geometry>
                                                                            <RectangleGeometry Rect="0,0,100,100"/>
                                                                        </GeometryDrawing.Geometry>
                                                                    </GeometryDrawing>
                                                                    <GeometryDrawing Brush="LightGray">
                                                                        <GeometryDrawing.Geometry>
                                                                            <GeometryGroup>
                                                                                <RectangleGeometry Rect="0,0,50,50"/>
                                                                                <RectangleGeometry Rect="50,50,50,50"/>
                                                                            </GeometryGroup>
                                                                        </GeometryDrawing.Geometry>
                                                                    </GeometryDrawing>
                                                                </DrawingGroup>
                                                            </DrawingBrush.Drawing>
                                                        </DrawingBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                            <Popup x:Name="PART_ColorPickerPalettePopup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" IsOpen="{Binding IsChecked, ElementName=PART_ColorPickerToggleButton}" PopupAnimation="Slide" StaysOpen="False" VerticalOffset="1" VerticalAlignment="Bottom">
                                <Grid Height="Auto" Width="Auto">
                                    <Border BorderThickness="1" Padding="3" d:LayoutOverrides="Width, Height" CornerRadius="5" BorderBrush="#FFCCCCCC">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#FFE7E7E7" Offset="0"/>
                                                <GradientStop Color="White" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid x:Name="_gridStandardColorsHost" Margin="4">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid Grid.Row="1">
                                                    <Grid.Visibility>
                                                        <TemplateBinding Property="ShowAvailableColors">

                                                        </TemplateBinding>
                                                    </Grid.Visibility>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <TextBlock Background="{x:Null}" Margin="0,0,0,1" Padding="2" Text="{TemplateBinding AvailableColorsHeader}" Style="{DynamicResource sTextBlock_Basic}"/>
                                                        <ListBox x:Name="PART_AvailableColors" Grid.Row="1">
                                                            <ListBox.Style>
                                                                <Style TargetType="{x:Type ListBox}">
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="BorderThickness" Value="0"/>
                                                                    <Setter Property="ItemsPanel">
                                                                        <Setter.Value>
                                                                            <ItemsPanelTemplate>
                                                                                <WrapPanel IsItemsHost="True" Width="200"/>
                                                                            </ItemsPanelTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ItemContainerStyle">
                                                                        <Setter.Value>
                                                                            <Style TargetType="{x:Type ListBoxItem}">
                                                                                <Setter Property="ToolTip" Value="{Binding Name}"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                                            <Grid ToolTip="{Binding Name}">
                                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                                <Border x:Name="_outerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                                                    <Border x:Name="_innerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                                                                </Border>
                                                                                            </Grid>
                                                                                            <ControlTemplate.Triggers>
                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                    <Setter Property="BorderBrush" TargetName="_outerBorder" Value="Red"/>
                                                                                                    <Setter Property="BorderBrush" TargetName="_innerBorder" Value="Yellow"/>
                                                                                                </Trigger>
                                                                                                <Trigger Property="IsSelected" Value="True">
                                                                                                    <Setter Property="BorderBrush" TargetName="_outerBorder" Value="Red"/>
                                                                                                    <Setter Property="BorderBrush" TargetName="_innerBorder" Value="Yellow"/>
                                                                                                </Trigger>
                                                                                            </ControlTemplate.Triggers>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ItemTemplate">
                                                                        <Setter.Value>
                                                                            <DataTemplate>
                                                                                <Grid>
                                                                                    <Border BorderBrush="#FFC9CACA" BorderThickness="1" Margin="2">
                                                                                        <Rectangle Height="14" Width="14">
                                                                                            <Rectangle.Style>
                                                                                                <Style TargetType="{x:Type Rectangle}">
                                                                                                    <Setter Property="Fill">
                                                                                                        <Setter.Value>
                                                                                                            <Binding Path="Color">
                                                                                                                <Binding.Converter>
                                                                                                                    <xctk:ColorToSolidColorBrushConverter/>
                                                                                                                </Binding.Converter>
                                                                                                            </Binding>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                    <Style.Triggers>
                                                                                                        <DataTrigger Binding="{Binding Name}" Value="Transparent">
                                                                                                            <Setter Property="Fill">
                                                                                                                <Setter.Value>
                                                                                                                    <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                                                                        <DrawingBrush.Drawing>
                                                                                                                            <DrawingGroup>
                                                                                                                                <GeometryDrawing Brush="White">
                                                                                                                                    <GeometryDrawing.Geometry>
                                                                                                                                        <RectangleGeometry Rect="0,0,100,100"/>
                                                                                                                                    </GeometryDrawing.Geometry>
                                                                                                                                </GeometryDrawing>
                                                                                                                                <GeometryDrawing Brush="LightGray">
                                                                                                                                    <GeometryDrawing.Geometry>
                                                                                                                                        <GeometryGroup>
                                                                                                                                            <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                                                            <RectangleGeometry Rect="50,50,50,50"/>
                                                                                                                                        </GeometryGroup>
                                                                                                                                    </GeometryDrawing.Geometry>
                                                                                                                                </GeometryDrawing>
                                                                                                                            </DrawingGroup>
                                                                                                                        </DrawingBrush.Drawing>
                                                                                                                    </DrawingBrush>
                                                                                                                </Setter.Value>
                                                                                                            </Setter>
                                                                                                        </DataTrigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </Rectangle.Style>
                                                                                        </Rectangle>
                                                                                    </Border>
                                                                                </Grid>
                                                                            </DataTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="SelectionMode" Value="Single"/>
                                                                </Style>
                                                            </ListBox.Style>
                                                        </ListBox>
                                                    </Grid>
                                                </Grid>
                                                <Grid Grid.Row="2">
                                                    <Grid.Visibility>
                                                        <TemplateBinding Property="ShowStandardColors">

                                                        </TemplateBinding>
                                                    </Grid.Visibility>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>
                                                        <TextBlock Background="{x:Null}" Margin="0,1" Padding="2" Text="{TemplateBinding StandardColorsHeader}" Style="{DynamicResource sTextBlock_Basic}"/>
                                                        <ListBox x:Name="PART_StandardColors" Grid.Row="1">
                                                            <ListBox.Style>
                                                                <Style TargetType="{x:Type ListBox}">
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="BorderThickness" Value="0"/>
                                                                    <Setter Property="ItemsPanel">
                                                                        <Setter.Value>
                                                                            <ItemsPanelTemplate>
                                                                                <WrapPanel IsItemsHost="True" Width="200"/>
                                                                            </ItemsPanelTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ItemContainerStyle">
                                                                        <Setter.Value>
                                                                            <Style TargetType="{x:Type ListBoxItem}">
                                                                                <Setter Property="ToolTip" Value="{Binding Name}"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                                            <Grid ToolTip="{Binding Name}">
                                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                                <Border x:Name="_outerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                                                    <Border x:Name="_innerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                                                                </Border>
                                                                                            </Grid>
                                                                                            <ControlTemplate.Triggers>
                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                    <Setter Property="BorderBrush" TargetName="_outerBorder" Value="Red"/>
                                                                                                    <Setter Property="BorderBrush" TargetName="_innerBorder" Value="Yellow"/>
                                                                                                </Trigger>
                                                                                                <Trigger Property="IsSelected" Value="True">
                                                                                                    <Setter Property="BorderBrush" TargetName="_outerBorder" Value="Red"/>
                                                                                                    <Setter Property="BorderBrush" TargetName="_innerBorder" Value="Yellow"/>
                                                                                                </Trigger>
                                                                                            </ControlTemplate.Triggers>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ItemTemplate">
                                                                        <Setter.Value>
                                                                            <DataTemplate>
                                                                                <Grid>
                                                                                    <Border BorderBrush="#FFC9CACA" BorderThickness="1" Margin="2">
                                                                                        <Rectangle Height="14" Width="14">
                                                                                            <Rectangle.Style>
                                                                                                <Style TargetType="{x:Type Rectangle}">
                                                                                                    <Setter Property="Fill">
                                                                                                        <Setter.Value>
                                                                                                            <Binding Path="Color">
                                                                                                                <Binding.Converter>
                                                                                                                    <xctk:ColorToSolidColorBrushConverter/>
                                                                                                                </Binding.Converter>
                                                                                                            </Binding>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                    <Style.Triggers>
                                                                                                        <DataTrigger Binding="{Binding Name}" Value="Transparent">
                                                                                                            <Setter Property="Fill">
                                                                                                                <Setter.Value>
                                                                                                                    <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                                                                        <DrawingBrush.Drawing>
                                                                                                                            <DrawingGroup>
                                                                                                                                <GeometryDrawing Brush="White">
                                                                                                                                    <GeometryDrawing.Geometry>
                                                                                                                                        <RectangleGeometry Rect="0,0,100,100"/>
                                                                                                                                    </GeometryDrawing.Geometry>
                                                                                                                                </GeometryDrawing>
                                                                                                                                <GeometryDrawing Brush="LightGray">
                                                                                                                                    <GeometryDrawing.Geometry>
                                                                                                                                        <GeometryGroup>
                                                                                                                                            <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                                                            <RectangleGeometry Rect="50,50,50,50"/>
                                                                                                                                        </GeometryGroup>
                                                                                                                                    </GeometryDrawing.Geometry>
                                                                                                                                </GeometryDrawing>
                                                                                                                            </DrawingGroup>
                                                                                                                        </DrawingBrush.Drawing>
                                                                                                                    </DrawingBrush>
                                                                                                                </Setter.Value>
                                                                                                            </Setter>
                                                                                                        </DataTrigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </Rectangle.Style>
                                                                                        </Rectangle>
                                                                                    </Border>
                                                                                </Grid>
                                                                            </DataTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="SelectionMode" Value="Single"/>
                                                                </Style>
                                                            </ListBox.Style>
                                                        </ListBox>
                                                    </Grid>
                                                </Grid>
                                                <Grid Margin="0,1" Grid.Row="3">
                                                    <Grid.Visibility>
                                                        <TemplateBinding Property="ShowRecentColors">

                                                        </TemplateBinding>
                                                    </Grid.Visibility>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>
                                                        <TextBlock Background="{x:Null}" Margin="0,1" Padding="2" Text="{TemplateBinding RecentColorsHeader}" Style="{DynamicResource sTextBlock_Basic}"/>
                                                        <ListBox x:Name="PART_RecentColors" Grid.Row="1">
                                                            <ListBox.Style>
                                                                <Style TargetType="{x:Type ListBox}">
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="BorderThickness" Value="0"/>
                                                                    <Setter Property="ItemsPanel">
                                                                        <Setter.Value>
                                                                            <ItemsPanelTemplate>
                                                                                <WrapPanel IsItemsHost="True" Width="200"/>
                                                                            </ItemsPanelTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ItemContainerStyle">
                                                                        <Setter.Value>
                                                                            <Style TargetType="{x:Type ListBoxItem}">
                                                                                <Setter Property="ToolTip" Value="{Binding Name}"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                                            <Grid ToolTip="{Binding Name}">
                                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                                <Border x:Name="_outerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                                                    <Border x:Name="_innerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                                                                </Border>
                                                                                            </Grid>
                                                                                            <ControlTemplate.Triggers>
                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                    <Setter Property="BorderBrush" TargetName="_outerBorder" Value="Red"/>
                                                                                                    <Setter Property="BorderBrush" TargetName="_innerBorder" Value="Yellow"/>
                                                                                                </Trigger>
                                                                                                <Trigger Property="IsSelected" Value="True">
                                                                                                    <Setter Property="BorderBrush" TargetName="_outerBorder" Value="Red"/>
                                                                                                    <Setter Property="BorderBrush" TargetName="_innerBorder" Value="Yellow"/>
                                                                                                </Trigger>
                                                                                            </ControlTemplate.Triggers>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ItemTemplate">
                                                                        <Setter.Value>
                                                                            <DataTemplate>
                                                                                <Grid>
                                                                                    <Border BorderBrush="#FFC9CACA" BorderThickness="1" Margin="2">
                                                                                        <Rectangle Height="14" Width="14">
                                                                                            <Rectangle.Style>
                                                                                                <Style TargetType="{x:Type Rectangle}">
                                                                                                    <Setter Property="Fill">
                                                                                                        <Setter.Value>
                                                                                                            <Binding Path="Color">
                                                                                                                <Binding.Converter>
                                                                                                                    <xctk:ColorToSolidColorBrushConverter/>
                                                                                                                </Binding.Converter>
                                                                                                            </Binding>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                    <Style.Triggers>
                                                                                                        <DataTrigger Binding="{Binding Name}" Value="Transparent">
                                                                                                            <Setter Property="Fill">
                                                                                                                <Setter.Value>
                                                                                                                    <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                                                                        <DrawingBrush.Drawing>
                                                                                                                            <DrawingGroup>
                                                                                                                                <GeometryDrawing Brush="White">
                                                                                                                                    <GeometryDrawing.Geometry>
                                                                                                                                        <RectangleGeometry Rect="0,0,100,100"/>
                                                                                                                                    </GeometryDrawing.Geometry>
                                                                                                                                </GeometryDrawing>
                                                                                                                                <GeometryDrawing Brush="LightGray">
                                                                                                                                    <GeometryDrawing.Geometry>
                                                                                                                                        <GeometryGroup>
                                                                                                                                            <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                                                            <RectangleGeometry Rect="50,50,50,50"/>
                                                                                                                                        </GeometryGroup>
                                                                                                                                    </GeometryDrawing.Geometry>
                                                                                                                                </GeometryDrawing>
                                                                                                                            </DrawingGroup>
                                                                                                                        </DrawingBrush.Drawing>
                                                                                                                    </DrawingBrush>
                                                                                                                </Setter.Value>
                                                                                                            </Setter>
                                                                                                        </DataTrigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </Rectangle.Style>
                                                                                        </Rectangle>
                                                                                    </Border>
                                                                                </Grid>
                                                                            </DataTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="SelectionMode" Value="Single"/>
                                                                </Style>
                                                            </ListBox.Style>
                                                        </ListBox>
                                                    </Grid>
                                                </Grid>
                                            </Grid>
                                            <Grid x:Name="_colorCanvasHost" Visibility="Collapsed">
                                                <xctk:ColorCanvas x:Name="PART_ColorCanvas" BorderThickness="0" Background="Transparent" SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </Grid>
                                            <ToggleButton x:Name="_colorMode" Margin="3,5,3,0" Grid.Row="2" Style="{DynamicResource sToggleButton_Common}" FontWeight="Bold" Height="30" Visibility="Collapsed"/>
                                        </Grid>
                                    </Border>
                                    <Border x:Name="border" BorderThickness="1" Margin="1" CornerRadius="4">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="White" Offset="0"/>
                                                <GradientStop Offset="0.5"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="DisplayColorAndName" Value="True">
                                <Setter Property="Visibility" TargetName="ColorOnly" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="ColorAndName" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsChecked" SourceName="_colorMode" Value="False">
                                <Setter Property="Content" TargetName="_colorMode" Value="STANDARD"/>
                                <Setter Property="Visibility" TargetName="_colorCanvasHost" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="_gridStandardColorsHost" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="#00FF1212"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>

        <Style TargetType="{x:Type Thumb}" x:Key="sThumb_Small">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="11"/>
            <Setter Property="Width" Value="11"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Height="Auto" Width="Auto" HorizontalAlignment="Stretch" Margin="0">
                            <Rectangle Fill="#FF333333" RadiusY="1" RadiusX="1" Stroke="{x:Null}" Opacity="0"/>
                            <Rectangle x:Name="rectangle" Fill="#FF333333" Stroke="White" RadiusX="1" RadiusY="1" Width="12" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Border x:Name="Border" BorderThickness="1" BorderBrush="#FFA1A1A1" CornerRadius="3">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFE7E7E7" Offset="0.045"/>
                                        <GradientStop Color="White" Offset="1"/>
                                        <GradientStop Color="White" Offset="0.04"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="rectangle" Value="White"/>
                                <Setter Property="Fill" TargetName="rectangle">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF333333" Offset="1"/>
                                            <GradientStop Color="#FF666666" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="Border" Value="#FFFF7800"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFCD33" Offset="0.04"/>
                                            <GradientStop Color="#FFFFCB00" Offset="1"/>
                                            <GradientStop Color="#FFFFA200" Offset="0.045"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="Border" Value="#FFFF7800"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFDEDEDE" Offset="0.04"/>
                                            <GradientStop Color="LightGray" Offset="1"/>
                                            <GradientStop Color="#FFDEDEDE" Offset="0.045"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="Border" Value="#FFB8B8B8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>


        <Style x:Key="sSlider_IconSize" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FFC4C4C4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid VerticalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TickBar x:Name="TopTick" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed" Fill="#FFFFAF00"/>
                                <TickBar x:Name="BottomTick" Height="6" Placement="Bottom" Grid.Row="2" Visibility="Visible" Fill="#FF6A6A6A"/>
                                <Border x:Name="TrackBackground" BorderBrush="White" BorderThickness="1" CornerRadius="2" Height="6" Margin="0" Grid.Row="1" VerticalAlignment="center">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFADADAD" Offset="0.2"/>
                                            <GradientStop Color="#FFC8C8C8" Offset="1"/>
                                            <GradientStop Color="#FF545454"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Canvas Margin="-6,-1">
                                        <Rectangle x:Name="PART_SelectionRange" Fill="#FFCCCCCC" Height="4.0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden"/>
                                    </Canvas>
                                </Border>
                                <Track x:Name="PART_Track" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Style="{StaticResource sThumb_Small}" Width="12" Height="20"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="TrackBackground" Value="#FF1D1D1D"/>
                                <Setter Property="BorderBrush" TargetName="TrackBackground" Value="#FF272727"/>
                            </Trigger>
                            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Foreground" TargetName="Thumb" Value="#FFC2C2C2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>

        <!--시작: sRadioButton-->
        <Style x:Key="sRadioButton1" TargetType="{x:Type RadioButton}">
            <Setter Property="Foreground" Value="#F4F4F4"/>
            <Setter Property="Background" Value="#F4F4F4"/>
            <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent" VerticalAlignment="Center">
                            <BulletDecorator.Bullet>
                                <Grid Height="14" Width="14">
                                    <Ellipse x:Name="bg" Height="Auto" Stroke="#FFCCCCCC" Width="Auto">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFE7E7E7" Offset="0.1"/>
                                                <GradientStop Color="White" Offset="1"/>
                                                <GradientStop Color="White" Offset="0.03"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse x:Name="check" Height="Auto" Stroke="{x:Null}" Width="Auto" Margin="3">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFFFA04B" Offset="0"/>
                                                <GradientStop Color="#FFFF5D00" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentControl x:Name="contentControl" HorizontalAlignment="Left" Margin="5,0,0,0" SnapsToDevicePixels="True" TextOptions.TextFormattingMode="Display" FontFamily="Malgun Gothic" FontSize="12" IsTabStop="False">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </ContentControl>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Visibility" TargetName="check" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="bg" Value="#FFFF7800"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Stroke" TargetName="bg" Value="#FFFF7800"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="check" Value="#FFB8B8B8"/>
                                <Setter Property="Fill" TargetName="bg">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFDEDEDE" Offset="0.04"/>
                                            <GradientStop Color="LightGray" Offset="1"/>
                                            <GradientStop Color="#FFDEDEDE" Offset="0.045"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" TargetName="contentControl" Value="{DynamicResource TextDisable}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>
        <!--끝: sRadioButton-->

    </UserControl.Resources>
    <Grid Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="26"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border BorderThickness="0" CornerRadius="0,0,6,6" Grid.Row="1" Background="#CC000000" Grid.RowSpan="3"/>
        <Grid Margin="0">
            <Border BorderBrush="Black" BorderThickness="0,0,0,1" CornerRadius="6,6,0,0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF343434" Offset="1"/>
                        <GradientStop Color="#FF747474"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <TextBlock x:Name="xTitleTextBlock_Shadow" HorizontalAlignment="Left" Margin="15,0,0,2" Foreground="#FF191919" Text="{x:Static Language:Resource_ArcGISControl_Properties.Title_LinkZone}" FontWeight="Bold" Style="{DynamicResource sTextBlock_Basic}" VerticalAlignment="Center"/>
            <TextBlock x:Name="xTitleTextBlock" HorizontalAlignment="Left" Margin="15,0,0,0" Foreground="White" Text="{x:Static Language:Resource_ArcGISControl_Properties.Title_LinkZone}" FontWeight="Bold" Style="{DynamicResource sTextBlock_Basic}" VerticalAlignment="Center"/>
        </Grid>
        <StackPanel Margin="0,20" Grid.Row="1">
            <StackPanel x:Name="xName" Orientation="Horizontal" Margin="20,0,0,14">
                <TextBlock TextWrapping="Wrap" Text="{x:Static Language:Resource_ArcGISControl_Properties.Label_LinkZoneName}" Style="{DynamicResource sTextBlock_Basic}" Foreground="White" FontWeight="Bold" Width="80" d:LayoutOverrides="HorizontalMargin" TextAlignment="Right" VerticalAlignment="Center"/>
                <TextBox Text="{Binding DataInfo.Name, UpdateSourceTrigger=PropertyChanged}"
                         IsEnabled="{Binding IsSingleSetting, UpdateSourceTrigger=PropertyChanged}"
                         Width="179" MaxLength="30" Height="27" Style="{DynamicResource sTextBox}" HorizontalAlignment="Left" Margin="5,0,0,0" TabIndex="10"/>
            </StackPanel>
            <StackPanel x:Name="xLinkedMap" Orientation="Horizontal" Margin="20,0,0,14">
                <TextBlock TextWrapping="Wrap" Text="{x:Static Language:Resource_ArcGISControl_Properties.Label_LinkedMap}" Style="{DynamicResource sTextBlock_Basic}" Foreground="White" FontWeight="Bold" d:LayoutOverrides="HorizontalMargin" TextAlignment="Right" VerticalAlignment="Center" Width="80"/>
                <ComboBox Style="{DynamicResource sComboBox}" Height="27" Width="179" d:LayoutOverrides="Height" Margin="5,0,0,0" 
                          ItemsSource="{Binding MapSettingInfoDatas, UpdateSourceTrigger=PropertyChanged}" 
                          SelectedIndex="{Binding SelectedLinkedMapDataIndex, UpdateSourceTrigger=PropertyChanged}"
                          IsEnabled="{Binding IsEnabledLinkedMap, UpdateSourceTrigger=PropertyChanged}"
                          DisplayMemberPath="Name" TabIndex="20" ItemContainerStyle="{DynamicResource sComboBoxItem}"/>
            </StackPanel>
            <StackPanel x:Name="xLinkedMapBookMark" Orientation="Horizontal" Margin="20,0,0,14">
				<TextBlock TextWrapping="Wrap" Text="{x:Static Language:Resource_ArcGISControl_Properties.Label_LinkedMapBookMark}" Style="{DynamicResource sTextBlock_Basic}" Foreground="White" FontWeight="Bold" d:LayoutOverrides="HorizontalMargin" TextAlignment="Right" VerticalAlignment="Center" Width="80"/>
                <ComboBox Style="{DynamicResource sComboBox}" Height="27" Width="179" d:LayoutOverrides="Height" Margin="5,0,0,0" 
                          ItemsSource="{Binding BookmarkList, UpdateSourceTrigger=PropertyChanged}" 
                          SelectedItem="{Binding SelectedBookmark, UpdateSourceTrigger=PropertyChanged}"
                          IsEnabled="{Binding IsEnabledLinkedMapBookMark, UpdateSourceTrigger=PropertyChanged}"
                          DisplayMemberPath="Name" TabIndex="20" ItemContainerStyle="{DynamicResource sComboBoxItem}"/>
			</StackPanel>
            <StackPanel Orientation="Horizontal" Margin="20,0,0,14" Visibility="{Binding IsVisibleTableSplData, Converter={StaticResource BoolToVisConverter}, UpdateSourceTrigger=PropertyChanged}">
                <TextBlock TextWrapping="Wrap" Text="{x:Static Language:Resource_ArcGISControl_Properties.Label_FillColor}" Style="{DynamicResource sTextBlock_Basic}" Foreground="White" FontWeight="Bold" Width="80" d:LayoutOverrides="HorizontalMargin" TextAlignment="Right" VerticalAlignment="Center"/>
                <Grid Height="27" Width="27" d:LayoutOverrides="Width" Margin="5,0,0,0">
                    <xctk:ColorPicker x:Name="xColorPickerFill" SelectedColor="{Binding FillColor, UpdateSourceTrigger=PropertyChanged}" ShowDropDownButton="False" Style="{DynamicResource sColorPicker}" TabIndex="30" />
                </Grid>
                <TextBlock TextWrapping="Wrap" Text="{x:Static Language:Resource_ArcGISControl_Properties.Label_OutlineColor}" Style="{DynamicResource sTextBlock_Basic}" Foreground="White" FontWeight="Bold" Width="70" TextAlignment="Right" VerticalAlignment="Center" d:LayoutOverrides="HorizontalMargin"/>
                <Grid Height="27" Width="27" Margin="5,0,0,0" d:LayoutOverrides="Width">
                    <xctk:ColorPicker SelectedColor="{Binding OutlineColor, UpdateSourceTrigger=PropertyChanged}" ShowDropDownButton="False" Style="{DynamicResource sColorPicker}" Height="27" VerticalAlignment="Top" TabIndex="40" />
                </Grid>
            </StackPanel>
            <StackPanel x:Name="xImage" Margin="20,0,0,14" Visibility="{Binding IsVisibleImageSplData, Converter={StaticResource BoolToVisConverter}, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Horizontal" Margin="0, 5">
                    <TextBlock TextWrapping="Wrap" Text="{x:Static Language:Resource_ArcGISControl_Properties.Label_LinkZoneImageName}" 
                           Style="{DynamicResource sTextBlock_Basic}" Foreground="White" FontWeight="Bold" d:LayoutOverrides="HorizontalMargin" TextAlignment="Right" VerticalAlignment="Center" Width="80"/>
                    <TextBox x:Name="xTexImageFileNam" 
                         Text="{Binding DataInfo.ImageObjectData.ImageFileName, UpdateSourceTrigger=PropertyChanged}"
                         IsEnabled="{Binding IsEnabledLinkedMap, UpdateSourceTrigger=PropertyChanged}"
                         Width="179" MaxLength="30" Height="27" Style="{DynamicResource sTextBox}" HorizontalAlignment="Left" Margin="5,0,0,0" TabIndex="10"></TextBox>
                    <Button Content="{x:Static Language:Resource_ArcGISControl_Properties.Button_Browse}"
							Command="{Binding ImportImagesButtonCommand, UpdateSourceTrigger=PropertyChanged}"
							FontFamily="Malgun Gothic" 
							FontStretch="SemiCondensed"
							FontSize="12"  
							FontWeight="Bold" TextOptions.TextFormattingMode="Display" 
							Style="{DynamicResource sButton_Common}" Margin="5,0,0,0" Width="130" Grid.Row="1" VerticalAlignment="Center" Height="27" TabIndex="50" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,5">
                    <TextBlock TextWrapping="Wrap" Text="Opacity :" 
                           Style="{DynamicResource sTextBlock_Basic}" Foreground="White" FontWeight="Bold" d:LayoutOverrides="HorizontalMargin" TextAlignment="Right" VerticalAlignment="Center" Width="80"/>
                    <Slider x:Name="xImageOpacity" Height="27" Width="179" HorizontalAlignment="Left" Margin="5,0,0,0" Style="{DynamicResource sSlider_IconSize}" VerticalAlignment="Top"
                        Minimum="0"
                        Maximum="1"
                        TickFrequency="0.1"
                        IsSnapToTickEnabled="True"
                        Value="{Binding ImageOpacity}" IsMoveToPointEnabled="True" TabIndex="20"
                        />
                    <StackPanel Margin="10,0,0,0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" >
                        <TextBlock TextWrapping="Wrap" Text="{Binding Value, ElementName=xImageOpacity, Converter={StaticResource MilliToCentConverter}}" 
                    		Style="{DynamicResource sTextBlock_Basic}" Foreground="White" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center" Margin="0" FontSize="16"/>
                        <TextBlock TextWrapping="Wrap" 
                    		Style="{DynamicResource sTextBlock_Basic}" Foreground="White" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center" Margin="3,0,0,0" FontSize="16" Text="%"/>
                    </StackPanel>
                </StackPanel>

            </StackPanel>

            <StackPanel x:Name="xStackPanelColorArgument" Orientation="Vertical"  Margin="20,0,0,14" Visibility="Collapsed"/>

            <StackPanel x:Name="xStackPanelTableArgument" Orientation="Vertical"  Margin="20,0,0,14">
            </StackPanel>
            <Grid x:Name="xSplunk" Height="412" Margin="10,0,10,14" Visibility="{Binding UseSplunk, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisConverter}}" >
                <Path Data="M215.75323,270.61736 L204.83301,270.61736 204.83301,681.16673 440.16383,681.16673 440.16383,270.61736 243.40828,270.61736" Margin="0,-0.5,0,-0.167" Stretch="Fill" Stroke="#FF474747" SnapsToDevicePixels="True"/>
                <Grid Margin="1" d:LayoutOverrides="Height">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="*"/>
						<RowDefinition Height="50"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="10"/>
                    </Grid.RowDefinitions>
                    <DataGrid ItemsSource="{Binding SplunkColorArgumentItems, UpdateSourceTrigger=PropertyChanged}" 
                            Margin="10,0" Grid.Row="1" Height="150" BorderBrush="#FFC2C2C2" Style="{DynamicResource sDataGrid}" 
                            CellStyle="{DynamicResource sDataGridCellStyle}" ColumnHeaderStyle="{DynamicResource sDataGridColumnHeader}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{x:Static Language:Resource_ArcGISControl_Properties.SplunkArgument_DataGrid_Header_Name}" IsReadOnly="True" Binding ="{Binding SplunkArgumentKey, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                            <DataGridTemplateColumn Header="{x:Static Language:Resource_ArcGISControl_Properties.SplunkArgument_DataGrid_Header_Value}" Width="2*">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <TextBox TextChanged="TextBoxColor_OnTextChanged" Text="{Binding SplunkArgumentValue, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource sTextBox}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Margin="0" Orientation="Horizontal" d:LayoutOverrides="Width" VerticalAlignment="Center">
                        <TextBlock TextWrapping="Wrap" Text="Color Status :" 
            				Style="{DynamicResource sTextBlock_Basic}" Foreground="White" FontWeight="Bold" 
            				TextAlignment="Right" VerticalAlignment="Center" Width="90" d:LayoutOverrides="HorizontalMargin"/>
                        <ComboBox Style="{DynamicResource sComboBox}" Height="27" 
            				 IsEnabled="{Binding IsEnabledLinkedMap, UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding SplunkInformationDatas, UpdateSourceTrigger=PropertyChanged}" 
                              SelectedIndex="{Binding SelectedColorSplunkInformationDataIndex, UpdateSourceTrigger=PropertyChanged}"
                              DisplayMemberPath="Name"  TabIndex="20" Width="179" Margin="5,0,0,0" ItemContainerStyle="{DynamicResource sComboBoxItem}"/>
                        <Button Content="{x:Static Language:Resource_ArcGISControl_Properties.BUTTON_APPLY}"
							Command="{Binding ApplyColorSPLCommand, UpdateSourceTrigger=PropertyChanged}"
							FontFamily="Malgun Gothic" 
							FontStretch="SemiCondensed"
							FontSize="12"  
							FontWeight="Bold" TextOptions.TextFormattingMode="Display" 
							Style="{DynamicResource sButton_Common}" Margin="5,0,0,0" Width="130" Grid.Row="1" VerticalAlignment="Center" Height="27" TabIndex="50" />
                    </StackPanel>
                    <StackPanel Margin="10,0,0,0" Orientation="Horizontal" VerticalAlignment="Top" d:LayoutOverrides="Width" Grid.Row="3" IsEnabled="{Binding IsEnabledPopupSetting, UpdateSourceTrigger=PropertyChanged}">
                        <RadioButton GroupName="PopupType" Content="Popup Data" Margin="5,0" 
                             IsChecked="{Binding IsPopupData, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource sRadioButton1}" TabIndex="10" />
                        <RadioButton GroupName="PopupType" Content="Browser" Margin="5,0" 
                             IsChecked="{Binding IsBrowser, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource sRadioButton1}" TabIndex="10" />
                    </StackPanel>
                    <StackPanel Margin="0,0,0,10" Orientation="Horizontal" d:LayoutOverrides="Width" Grid.Row="4" VerticalAlignment="Top" IsEnabled="{Binding IsEnabledPopupSetting, UpdateSourceTrigger=PropertyChanged}" >
                        <TextBlock TextWrapping="Wrap" Text="Popup Data :" Visibility="{Binding IsPopupData, Converter={StaticResource BoolToVisConverter}}"
            				Style="{DynamicResource sTextBlock_Basic}" Foreground="White" FontWeight="Bold" 
            				TextAlignment="Right" VerticalAlignment="Center" Width="90" d:LayoutOverrides="HorizontalMargin"/>
                        <ComboBox Style="{DynamicResource sComboBox}" Height="27" Visibility="{Binding IsPopupData, Converter={StaticResource BoolToVisConverter}}"
            				    ItemsSource="{Binding SplunkInformationDatas, UpdateSourceTrigger=PropertyChanged}" 
                              SelectedIndex="{Binding SelectedTableSplunkInformationDataIndex, UpdateSourceTrigger=PropertyChanged}"
                              DisplayMemberPath="Name" TabIndex="20" Width="179" Margin="5,0,0,0" ItemContainerStyle="{DynamicResource sComboBoxItem}"/>
                        <TextBlock TextWrapping="Wrap" Text="URL :" 
                        	Style="{DynamicResource sTextBlock_Basic}" Foreground="White" FontWeight="Bold" Visibility="{Binding IsBrowser, Converter={StaticResource BoolToVisConverter}}"
                        	TextAlignment="Right" VerticalAlignment="Center" Width="90" Margin="0"/>
                        <TextBox Text="{Binding DataInfo.BrowserUrl, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource sTextBox}" Visibility="{Binding IsBrowser, Converter={StaticResource BoolToVisConverter}}" Height="27" Width="313" Margin="5,0,0,0"/>
                    </StackPanel>
                    <DataGrid ItemsSource="{Binding SplunkTableArgumentItems, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding IsPopupData, Converter={StaticResource BoolToVisConverter}}"
                        Margin="10,0" Grid.Row="5" Height="150" BorderBrush="#FFC2C2C2" 
                        Style="{DynamicResource sDataGrid}" CellStyle="{DynamicResource sDataGridCellStyle}" 
                        ColumnHeaderStyle="{DynamicResource sDataGridColumnHeader}"
                        IsEnabled="{Binding IsEnabledPopupSetting, UpdateSourceTrigger=PropertyChanged}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{x:Static Language:Resource_ArcGISControl_Properties.SplunkArgument_DataGrid_Header_Name}" IsReadOnly="True" Binding ="{Binding SplunkArgumentKey, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                            <DataGridTemplateColumn Header="{x:Static Language:Resource_ArcGISControl_Properties.SplunkArgument_DataGrid_Header_Value}" Width="2*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox TextChanged="TextBoxTable_OnTextChanged" Text="{Binding SplunkArgumentValue, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Margin="10,0" Grid.Row="2" VerticalAlignment="Center">
                    	<Rectangle Fill="Black" StrokeThickness="0" Height="1" d:LayoutOverrides="Height"/>
                    	<Rectangle Fill="#FF474747" StrokeThickness="0" Height="1" d:LayoutOverrides="Height"/>
                    </StackPanel>
                </Grid>
                <TextBlock TextWrapping="Wrap" Text="Splunk" VerticalAlignment="Top" Foreground="{DynamicResource bBackground_#FFFFCC00_Point}" Style="{DynamicResource sTextBlock_Basic}" FontWeight="Bold" HorizontalAlignment="Left" Margin="25,-9,0,0"/>
            </Grid>
        </StackPanel>

    </Grid>
</UserControl>
